<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	
<mapper namespace = "CommentMapper">
	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="commentMap" type= "study.spring.zigme.model.Comment">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="commNo" column="commNo" />
		<result property="commContent" column="commContent" />
		<result property="commUpCount" column="commUpCount" />
		<result property="parentNo" column="parentNo" />
		<result property="commRegdate" column="commRegdate" />
		<result property="commNoti" column="commNoti" />
		<result property="postNo" column="postNo" />
		<result property="userNo" column="userNo" />
		<result property="nickname" column="nickname" />
		<result property="blockUserflag" column="blockUserflag" />
		<result property="outUserflag" column="outUserflag" />	
	</resultMap>
	
	<!-- 단일행 조회를 위한 기능 정의 -->
	<select id ="selectItem" parameterType="study.spring.zigme.model.Comment"
	resultMap="commentMap">
	SELECT commNo, commContent, commUpCount, parentNo, commRegdate, commNoti, postNo, 
		c.userNo, nickname, blockUserflag, outUserflag
	FROM comment c
	INNER JOIN user u ON c.userNo = u.userNo
	WHERE commNo = #{commNo} 
	</select>
	
	<!-- 다중행 조회를 위한 기능 정의 -->
	<select id ="selectList" parameterType="study.spring.zigme.model.Comment"
	resultMap="commentMap">
	SELECT commNo, commContent, commUpCount, parentNo, commRegdate, commNoti, postNo, 
		c.userNo, nickname, blockUserflag, outUserflag
	FROM comment c
	INNER JOIN user u ON c.userNo = u.userNo
	ORDER BY commNo DESC;
	</select>
	
	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertItem"
	parameterType = "study.spring.zigme.model.Comment"
	useGeneratedKeys="true"
	keyProperty="commNo">
	INSERT INTO comment (commContent, commUpCount, parentNo, commRegdate, commNoti, postNo, userNo) VALUES 
		(#{commContent}, #{commUpCount}, #{parentNo}, #{commRegdate}, #{commNoti}, #{postNo}, #{userNo});
	</insert>
	
	<!-- 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItem"
	parameterType="study.spring.zigme.model.Comment">
	DELETE FROM comment WHERE commNo = #{commNo};
	</delete>
	
	<!-- 데이터 갱신을 위한 기능 정의 -->
	<update id= "updateItem"
	parameterType="study.spring.zigme.model.Comment">
	UPDATE comment
	<set>
		<if test="commContent != null and commContent != ''">
			commContent = #{commContent}
		</if>
		<if test="commUpCount != null and commUpCount != ''">
			, commUpCount = #{commUpCount}
		</if>
	</set>
	WHERE commNo =#{commNo};
	</update>
	
	<!-- 특정게시글을 참조하는 댓글 데이터를 모두 참조 해제 한다. -->
	<update id="unsetPost"
		parameterType= "study.spring.zigme.model.Post">
		UPDATE comment SET postNo=null WHERE postNo= #{postNo}
	</update>
	
</mapper>