<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="FoodMapper">
	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="foodMap" type="study.spring.zigme.model.Food">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="foodNo" column="foodNo" />
		<result property="foodName" column="foodName" />
		<result property="foodCategory" column="foodCategory" />
		<result property="foodWeather" column="foodWeather" />
		<result property="foodCondition" column="foodCondition" />
		<result property="delFoodflag" column="delFoodflag" />
		<result property="adminImgName" column="adminImgName" />
	</resultMap>

	<!-- 추첨된 음식 이미지명 -->
	<select id="selectItem"
		parameterType="study.spring.zigme.model.Food" resultMap="foodMap">
		SELECT f.foodName, a.adminImgName FROM adminsetimage a INNER JOIN food f on
		a.refTableId = f.foodNo WHERE foodName = #{foodName};
	</select>

	<!-- 업종별에서 선택한 음식 리스트 return -->
	<select id="selectList"
		parameterType="study.spring.zigme.model.Food" resultMap="foodMap">
		SELECT foodName FROM food WHERE foodCategory = #{foodCategory} AND
		delFoodflag = 'N' ORDER BY foodNo;
	</select>

	<!-- 현재 날씨 음식 리스트 return -->
	<select id="selectListWeather"
		parameterType="study.spring.zigme.model.Food" resultMap="foodMap">
		SELECT foodName FROM food WHERE foodWeather = #{foodWeather} AND delFoodflag
		= 'N' ORDER BY foodNo;
	</select>

	<!-- 건강상태별에서 선택한 음식 리스트 return -->
	<select id="selectListCodi"
		parameterType="study.spring.zigme.model.Food" resultMap="foodMap">
		SELECT foodName FROM food WHERE foodCondition = #{foodCondition} AND
		delFoodflag = 'N' ORDER BY foodNo;
	</select>

	<!-- 단일행 조회를 위한 기능 정의 -->
	<select id="selectFood"
		parameterType="study.spring.zigme.model.Food" resultMap="foodMap">
		SELECT
		f.foodNo, f.foodName, f.foodCategory, f.foodWeather, f.foodCondition,
		a.adminImgName FROM food f INNER JOIN adminsetimage a on a.refTableId
		= f.foodNo WHERE foodNo = #{foodNo};
	</select>

	<!-- 다중행 조회를 위한 기능 정의 -->
	<select id="selectFoodList"
		parameterType="study.spring.zigme.model.Food" resultMap="foodMap">
		SELECT
		f.foodNo, f.foodName, f.foodCategory, f.foodWeather, f.foodCondition,
		a.adminImgName FROM food f INNER JOIN adminsetimage a on a.refTableId
		= f.foodNo ORDER BY foodNo DESC;
	</select>

	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertItem"
		parameterType="study.spring.zigme.model.Food" useGeneratedKeys="true"
		keyProperty="foodNo">
		INSERT INTO food (foodNo, foodName, foodCategory, foodWeather,
		foodCondition, delFoodflag) VALUES
		(#{foodNo}, #{foodName}, #{foodCategory}, #{foodWeather}, #{foodCondition},
		#{delFoodflag});
	</insert>

	<!-- 데이터 갱신을 위한 기능 정의 -->
	<update id="updateItem"
		parameterType="study.spring.zigme.model.Food">
		UPDATE food
		<set>
			<if test="foodName != null and foodName != ''">
				foodName = #{foodName}
			</if>
			<if test="foodCategory != null and foodCategory != ''">
				, foodCategory = #{foodCategory}
			</if>
			<if test="foodWeather != null and foodWeather != ''">
				, foodWeather = #{foodWeather}
			</if>
			<if test="foodCategory != null and foodCategory != ''">
				, foodCondition = #{foodCondition}
			</if>
		</set>
		WHERE foodNo = #{foodNo};
	</update>

	<!-- 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItem"
		parameterType="study.spring.zigme.model.Food">
		DELETE FROM food WHERE foodNo = #{foodNo};
	</delete>

</mapper>