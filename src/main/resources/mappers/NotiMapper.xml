<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace = "NotiMapper">
	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="postMap" type= "study.spring.zigme.model.Post">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="postNo" column="postNo" />
		<result property="postNoti" column="postNoti" />
		<result property="userNo" column="userNo" />
	</resultMap>
	
	<!-- 다중행 조회를 위한 기능 정의 -->
	<select id ="selectList" parameterType="study.spring.zigme.model.Post"
	resultMap="postMap">
	SELECT postNo, postTitle, postNoti, p.userNo
	FROM post p
	INNER JOIN user u ON p.userNo = u.userNo
	</select>
	
	<!-- 게시글에 댓글이 달린 경우 다중행 조회 쿼리  -->
	<!-- select p.postNo, p.postTitle, count(commNo) from comment c, post p 
		where c.postNo = p.postNo and c.postNo IN (select postNo from post where postNoti = '1' and userNo = 1) group by c.postNo; -->
	
	<!-- select p.postNo, p.postTitle, count(commNo) from comment c, post p 
		where c.postNo = p.postNo and c.postNo IN (select postNo from post where postNoti = '1' and userNo = 1) group by c.postNo; -->
	
	<!-- 댓글에 댓글이 달린 경우(=대댓글) 다중행 조회 쿼리  -->
	<!-- select A.postNo, A.commNo, A.commContent, count(A.commNo) from comment A, comment B where A.commNo = B.parentNo 
		and B.commNoti = '1' 
		and B.userNo = 1
		group by A.commNo; -->
	
	
	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertItem"
		parameterType = "study.spring.zigme.model.Post"
		useGeneratedKeys="true"
		keyProperty="postNo">
		INSERT INTO post (postSubtitle, postTitle, postContent, postUpcount, postViewcount, postRegdate,
			postNoti, userNo) VALUES 
			(#{postSubtitle}, #{postTitle}, #{postContent}, #{postUpcount}, #{postViewcount}, #{postRegdate},
			#{postNoti}, #{userNo});
	</insert>
	
	<!-- 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItem"
	parameterType="study.spring.zigme.model.Post">
	DELETE FROM post WHERE postNo = #{postNo};
	</delete>
	
	<!-- 데이터 갱신을 위한 기능 정의 -->
	<update id= "updateItem"
	parameterType="study.spring.zigme.model.Post">
	UPDATE post
	<set>
		<if test="postUpcount != null and postUpcount != ''">
			postUpcount = #{postUpcount}
		</if>
		<if test="postViewcount != null and postViewcount != ''">
			, postViewcount = #{postViewcount}
		</if>
	</set>
	WHERE postNo =#{postNo};
	</update>
	
	<!-- 전체 데이터 수 조회 -->
	<!-- 
		조건에 맞는 데이터수를 조회할려면 dynamic where절을 이용하면 된다.
	 -->
	 <select id="selectCountAll"
	 parameterType="study.spring.zigme.model.Post"
	 resultType="int">
	 SELECT COUNT(*) FROM post;
	 </select>
</mapper>
